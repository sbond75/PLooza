
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightLARROWleftNOTnonassocLELTEQUALSGTleftPLUSMINUSleftTIMESDIVIDEleftNOTleftDOTCOMMA COMMENT DIVIDE DOT ELLIPSIS END_OF_LINE_COMMENT EQUALS ESCAPE FALSE GT IDENTIFIER IN INTEGER LARROW LBRACE LBRACKET LE LET_EQUALS LPAREN LT MINUS NEGATE NEW NOT PLUS RBRACE RBRACKET RPAREN SEMI STRING TIMES TRUE comment_END comment_INSIDE comment_STARTprogram : stmtliststmtlist : stmtlist : stmt SEMI stmtliststmt : LBRACE stmt RBRACE SEMIstmt : identifier identifier LET_EQUALS expr SEMIstmt : identifier exprlist SEMIidentifier : IDENTIFIERexprlist : exprlist : expr exprlistformallist : formallist : formallist1formallist1 : formalformallist1 : formal COMMA formallist1formal : identifierexpr : identifier LARROW exprexpr : LBRACE exprlist RBRACEexpr : NEW identifierexpr : expr PLUS exprexpr : expr TIMES exprexpr : expr MINUS exprexpr : expr DIVIDE exprexpr : NEGATE exprexpr : expr LT exprexpr : expr LE exprexpr : expr EQUALS exprexpr : NOT exprexpr : LPAREN expr RPARENexpr : identifierexpr : INTEGERexpr : STRINGexpr : TRUEexpr : FALSE'
    
_lr_action_items = {'$end':([0,1,2,7,21,],[-2,0,-1,-2,-3,]),'LBRACE':([0,4,5,6,7,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[4,4,12,-7,4,-28,12,12,12,12,12,-29,-30,-31,-32,12,12,12,12,12,12,12,12,12,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'IDENTIFIER':([0,4,5,6,7,9,10,12,13,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[6,6,6,-7,6,-28,6,6,6,6,6,6,-29,-30,-31,-32,6,6,6,6,6,6,6,6,6,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'SEMI':([3,5,6,9,10,11,17,18,19,20,22,25,33,34,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,],[7,-8,-7,-28,-8,34,-29,-30,-31,-32,40,-9,-28,-6,-17,-22,-26,-4,52,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,-5,]),'NEW':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[13,-7,-28,13,13,13,13,13,-29,-30,-31,-32,13,13,13,13,13,13,13,13,13,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'NEGATE':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[14,-7,-28,14,14,14,14,14,-29,-30,-31,-32,14,14,14,14,14,14,14,14,14,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'NOT':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[15,-7,-28,15,15,15,15,15,-29,-30,-31,-32,15,15,15,15,15,15,15,15,15,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'LPAREN':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[16,-7,-28,16,16,16,16,16,-29,-30,-31,-32,16,16,16,16,16,16,16,16,16,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'INTEGER':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[17,-7,-28,17,17,17,17,17,-29,-30,-31,-32,17,17,17,17,17,17,17,17,17,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'STRING':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[18,-7,-28,18,18,18,18,18,-29,-30,-31,-32,18,18,18,18,18,18,18,18,18,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'TRUE':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[19,-7,-28,19,19,19,19,19,-29,-30,-31,-32,19,19,19,19,19,19,19,19,19,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'FALSE':([5,6,9,10,12,14,15,16,17,18,19,20,23,24,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,],[20,-7,-28,20,20,20,20,20,-29,-30,-31,-32,20,20,20,20,20,20,20,20,20,-28,-17,-22,-26,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),'LET_EQUALS':([6,9,],[-7,23,]),'LARROW':([6,9,33,],[-7,24,24,]),'PLUS':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,26,-29,-30,-31,-32,-28,-17,26,26,26,26,26,-18,-19,-20,-21,26,26,26,-16,-27,]),'TIMES':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,27,-29,-30,-31,-32,-28,-17,27,27,27,27,27,27,-19,27,-21,27,27,27,-16,-27,]),'MINUS':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,28,-29,-30,-31,-32,-28,-17,28,28,28,28,28,-18,-19,-20,-21,28,28,28,-16,-27,]),'DIVIDE':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,29,-29,-30,-31,-32,-28,-17,29,29,29,29,29,29,-19,29,-21,29,29,29,-16,-27,]),'LT':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,30,-29,-30,-31,-32,-28,-17,30,30,30,30,30,-18,-19,-20,-21,None,None,None,-16,-27,]),'LE':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,31,-29,-30,-31,-32,-28,-17,31,31,31,31,31,-18,-19,-20,-21,None,None,None,-16,-27,]),'EQUALS':([6,9,10,17,18,19,20,33,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,],[-7,-28,32,-29,-30,-31,-32,-28,-17,32,32,32,32,32,-18,-19,-20,-21,None,None,None,-16,-27,]),'RBRACE':([6,8,10,12,17,18,19,20,25,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,],[-7,22,-8,-8,-29,-30,-31,-32,-9,-28,-6,50,-17,-22,-26,-4,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,-5,]),'RPAREN':([6,17,18,19,20,33,36,37,38,39,42,43,44,45,46,47,48,49,50,51,],[-7,-29,-30,-31,-32,-28,-17,-22,-26,51,-15,-18,-19,-20,-21,-23,-24,-25,-16,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmtlist':([0,7,],[2,21,]),'stmt':([0,4,7,],[3,8,3,]),'identifier':([0,4,5,7,10,12,13,14,15,16,23,24,26,27,28,29,30,31,32,],[5,5,9,5,33,33,36,33,33,33,33,33,33,33,33,33,33,33,33,]),'expr':([5,10,12,14,15,16,23,24,26,27,28,29,30,31,32,],[10,10,10,37,38,39,41,42,43,44,45,46,47,48,49,]),'exprlist':([5,10,12,],[11,25,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmtlist','program',1,'p_program','parser.py',19),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist_none','parser.py',23),
  ('stmtlist -> stmt SEMI stmtlist','stmtlist',3,'p_stmtlist_some','parser.py',27),
  ('stmt -> LBRACE stmt RBRACE SEMI','stmt',4,'p_stmt_block','parser.py',34),
  ('stmt -> identifier identifier LET_EQUALS expr SEMI','stmt',5,'p_stmt_init','parser.py',38),
  ('stmt -> identifier exprlist SEMI','stmt',3,'p_stmt_declOrCall','parser.py',42),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',47),
  ('exprlist -> <empty>','exprlist',0,'p_exprlist_none','parser.py',52),
  ('exprlist -> expr exprlist','exprlist',2,'p_exprlist_some','parser.py',56),
  ('formallist -> <empty>','formallist',0,'p_formallist_empty','parser.py',62),
  ('formallist -> formallist1','formallist',1,'p_formallist_1','parser.py',66),
  ('formallist1 -> formal','formallist1',1,'p_formallist1_only','parser.py',72),
  ('formallist1 -> formal COMMA formallist1','formallist1',3,'p_formallist1_some','parser.py',76),
  ('formal -> identifier','formal',1,'p_formal','parser.py',82),
  ('expr -> identifier LARROW expr','expr',3,'p_expr_assign','parser.py',88),
  ('expr -> LBRACE exprlist RBRACE','expr',3,'p_expr_brace','parser.py',92),
  ('expr -> NEW identifier','expr',2,'p_expr_new','parser.py',96),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','parser.py',100),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','parser.py',104),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','parser.py',108),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_divide','parser.py',112),
  ('expr -> NEGATE expr','expr',2,'p_expr_negate','parser.py',116),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','parser.py',120),
  ('expr -> expr LE expr','expr',3,'p_expr_le','parser.py',124),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_eq','parser.py',128),
  ('expr -> NOT expr','expr',2,'p_expr_not','parser.py',132),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_paren','parser.py',136),
  ('expr -> identifier','expr',1,'p_expr_identifier','parser.py',140),
  ('expr -> INTEGER','expr',1,'p_expr_integer','parser.py',144),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',148),
  ('expr -> TRUE','expr',1,'p_expr_true','parser.py',152),
  ('expr -> FALSE','expr',1,'p_expr_false','parser.py',156),
]
